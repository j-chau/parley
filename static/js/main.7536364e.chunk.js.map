{"version":3,"sources":["components/MeetingTime.js","components/AddLocation.js","components/UserInput.js","App.js","serviceWorker.js","index.js"],"names":["MeetingTime","props","className","displayTime","duration","timeZone","timeZoneCheck","meetingFound","displayStartArr","Object","values","startTime","displaySuggestArr","suggestTime","map","el","index","newTime","key","showResults","displayResults","AddLocation","htmlFor","value","name","id","onChange","e","onSelect","timeZoneList","UserInput","timeDropDownLoop","start","end","meetingTimeArr","i","time","push","etcDropDownLoop","etcArr","etcList","displayText","unshift","disabled","selected","addOrSubtract","change","state","setState","prevState","hasOwnProperty","updateResults","addNewLocation","locationArr","numLocation","saveTimeZone","saveStartTime","parseInt","target","initialTime","copyTimeZone","getUserInput","handleClick","preventDefault","errMsg","action","this","aria-hidden","tabIndex","onClick","type","meetingMsg","Component","App","userInput","timeZoneArr","copyTimeZoneCheck","copyStartTime","location1","validateTime","check","every","Boolean","newSuggestStart","newSuggestCheck","noMeetingsMsg","length","goodTime","adjustStartTime","adjustEndTime","axios","method","url","dataResponse","params","reqUrl","xmlToJSON","useCache","then","response","data","pop","truncArr","substring","sort","a","b","negOnlyArr","filter","reverse","sortedArr","slice","concat","href","rel","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7536364e.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport './../styles/MeetingTime.css';\n\nconst showResults = ({ duration, timeZone, timeZoneCheck, meetingFound }) => {\n    const displayStartArr = Object.values(timeZone.startTime);\n    const displaySuggestArr = Object.values(timeZone.suggestTime);\n\n    let displayTime;\n    return displayStartArr.map((el, index) => {\n        if (timeZoneCheck[index]) displayTime = \"goodTime\";\n        else displayTime = \"badTime\";\n        const newTime = displaySuggestArr[index];\n\n        return (\n            <Fragment key={index}>\n            <p className={displayTime}>{`${el} - ${el + duration}`}</p>\n            {meetingFound === true ?\n            <p>{`${newTime} - ${newTime + duration}`}</p> :\n            <p>None</p>}\n            \n            </Fragment>\n        )\n    })\n}\n\nconst MeetingTime = (props) => {\n    return (\n        <div className=\"grid-container\">\n            <h3>Local time</h3>\n            <h3>Suggestions</h3>\n            {showResults(props.displayResults)}\n        </div>\n    );\n}\n\nexport default MeetingTime;","import React from 'react'\n\nconst AddLocation = (props) => {\n    return (\n        <div className=\"gtm\">\n            <label htmlFor=\"selectTimeZone\">Select Time Zone:</label>\n            <select value={props.value} name={props.id} id=\"selectTimeZone\" onChange={(e) => props.onSelect(e)}>\n                {props.timeZoneList}\n            </select>\n        </div>\n    )\n}\n\nexport default AddLocation;","import React, { Component } from 'react';\nimport './../styles/UserInput.css';\n\nimport AddLocation from './AddLocation.js';\n\nexport default class UserInput extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            initialTime: 0,\n            duration: 1,\n            timeZone: {},\n            numLocation: 1,\n            errMsg: \"\",\n        }\n    }\n\n    timeDropDownLoop = (start, end) => {\n        let meetingTimeArr = [<option value={\"\"} key={0}> {\"\"} </option>];\n        for (let i = start; i < end; i++) {\n            let time = i;\n            if (start === 8 && time > 12) time -= 12;\n            meetingTimeArr.push(<option value={i} key={i}> {time} </option>)\n        }\n        return meetingTimeArr;\n    }\n\n    etcDropDownLoop = () => {\n        const etcArr =  this.props.etcList.map(el => {\n            let displayText = \"GMT \";\n            if (el >= 0) displayText += \"+\";\n            return (\n                <option value={el} key={el}>{displayText + el}</option>\n            )\n        })\n        etcArr.unshift(<option value={\"\"} key={0} disabled selected > {\"\"} </option>);\n        return etcArr;\n    }\n\n    addOrSubtract = (change) => {\n        const duration = this.state.duration + change;\n        if (duration < 5 && duration > 0) {\n            this.setState(prevState => ({\n                duration: prevState.duration + change\n            }), () => {\n                if (this.state.timeZone.hasOwnProperty(\"location1\")) this.updateResults();\n            })\n        }\n    }\n\n    addNewLocation = () => {\n        let locationArr = [];\n        for (let i = 0; i < this.state.numLocation; i++) {\n            locationArr.push(\n                <AddLocation\n                    id={i + 1}\n                    key={i + 1}\n                    timeZoneList={this.etcDropDownLoop()}\n                    onSelect={this.saveTimeZone} />\n            )\n        }\n        return locationArr;\n    }\n\n    saveStartTime = (e) => {\n        let time = parseInt(e.target.value);\n        this.setState({\n            initialTime: time\n        }, () => {\n            if (this.state.timeZone.hasOwnProperty(\"location1\")) this.updateResults();\n        })\n    }\n\n    saveTimeZone = (e) => {\n        const copyTimeZone = { ...this.state.timeZone };\n        const keyName = \"location\" + e.target.name;\n        copyTimeZone[keyName] = e.target.value;\n\n        if (e.target.value !== '') {\n            this.setState({\n            timeZone: copyTimeZone\n            }, this.updateResults);\n        }\n    }\n\n    updateResults = () => {\n        const { initialTime, duration, timeZone } = this.state;\n        this.props.getUserInput(initialTime, duration, timeZone);\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        if (this.state.duration === 0) this.setState({\n            errMsg: \"Meeting duration cannot be 0\"\n        })\n        else if (this.state.numLocation < 3) {\n            this.setState(prevState => ({\n                numLocation: prevState.numLocation + 1,\n                errMsg: \"\"\n            }))\n            this.addNewLocation();\n        } else this.setState({\n            errMsg: \"Max. number of locations reached\"\n        })\n    }\n\n    render() {\n        return (\n            <form action=\"\">\n\n                <fieldset className=\"meetingStart\">\n                    <label htmlFor=\"\">Meeting Start</label>\n                    <select value={this.state.initialTime} onChange={this.saveStartTime} name=\"\" id=\"\">\n                        {this.timeDropDownLoop(8, 19)}\n                    </select>\n                </fieldset>\n\n                <label htmlFor=\"meetingDuration\">Meeting Duration</label>\n                <fieldset className=\"addSubtract\" id=\"meetingDuration\">\n\n                    <span className=\"srOnly\">subtract meeting time</span>\n                    <i className=\"fas fa-minus\" aria-hidden=\"true\" tabIndex={0} onClick={() => this.addOrSubtract(-1)}></i>\n\n                    <span>{this.state.duration}</span>\n\n                    <span className=\"srOnly\">add meeting time</span>\n                    <i className=\"fas fa-plus\" aria-hidden=\"true\" tabIndex={0} onClick={() => this.addOrSubtract(+1)}></i>\n                </fieldset>\n\n                {this.addNewLocation()}\n\n                <button type=\"submit\" value=\"Submit\" onClick={this.handleClick}>Add New Location</button>\n                <p className=\"errMsg\">{this.state.errMsg}</p> \n                <p className=\"errMsg\">{this.props.meetingMsg}</p>\n                \n                \n\n            </form>\n        );\n    }\n}\n\n","import React, { Component } from 'react'\nimport './App.css';\nimport axios from 'axios';\nimport './styles/MediaQuery.css'\n\nimport MeetingTime from './components/MeetingTime';\nimport UserInput from './components/UserInput';\n\nexport default class App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      etcList: [],\n      userInput: {\n        meetingFound: true,\n        noMeetingsMsg: \"\",\n        duration: 0,\n        initialTime: 0,\n        timeZone: {\n          startTime: {},\n          suggestTime: {}\n        },\n        timeZoneCheck: []\n      }\n    }\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'Get',\n      url: 'https://proxy.hackeryou.com',\n      dataResponse: 'json',\n      params: {\n        reqUrl: `https://worldtimeapi.org/api/timezone/Etc`,\n          xmlToJSON: false,\n          useCache: false\n      }\n    }).then(response => {\n      const etcList = response.data;\n      etcList.pop();\n      const truncArr = etcList.map(el => parseInt(el.substring(7)));\n      truncArr[0] = 0;\n      truncArr.sort((a, b) => a - b);\n\n      const negOnlyArr = truncArr.filter(el => el < 0).reverse();\n      const posOnlyArr = truncArr.slice(negOnlyArr.length);\n      const sortedArr = posOnlyArr.concat(negOnlyArr);\n\n      this.setState({\n        etcList: sortedArr,\n      })\n    })\n  }\n\n  getUserInput = (initialTime, duration, timeZone) => {\n    this.setState(prevState => ({\n      userInput: {\n        ...prevState.userInput,\n        initialTime: initialTime,\n        duration,\n        timeZone: {\n          startTime: timeZone\n        },\n      }\n    }))\n\n    // creating array from the values of the timeZone\n    const timeZoneObj = Object.values(timeZone);\n    const timeZoneArr = timeZoneObj.map(el => parseInt(el))\n    let startTime = initialTime;\n    // initial settings for validateTime()\n    let copyTimeZoneCheck = [];\n    let copyStartTime = { location1: startTime };\n\n    this.validateTime(timeZoneArr, startTime, duration, copyTimeZoneCheck, copyStartTime);\n    this.setState(prevState => ({\n      userInput: {\n        ...prevState.userInput,\n        timeZone: {\n          startTime: copyStartTime,\n          suggestTime: copyStartTime\n        },\n        timeZoneCheck: copyTimeZoneCheck\n      }\n    }))\n\n    // if meeting time for other locations are outside of work hours, \n    //    iterate start time (from initial user input) until suitable time is reached\n    let check = copyTimeZoneCheck.every(Boolean);\n    let newSuggestStart = { ...copyStartTime };\n    if (!check) {\n      let newSuggestCheck = [...copyTimeZoneCheck];\n      let i = 0;\n      while (!check && i < 24) {\n        i++;\n        startTime += 1;\n        check = this.validateTime(timeZoneArr, startTime, duration, newSuggestCheck, newSuggestStart).every(Boolean);\n      }\n    }\n\n    // when check becomes true after while loop, setState for updated suggestTime\n    if (check) {\n      this.setState(prevState => ({\n        userInput: {\n          ...prevState.userInput,\n          meetingFound: true,\n          noMeetingsMsg: \"\",\n          timeZone: {\n            ...prevState.userInput.timeZone,\n            suggestTime: newSuggestStart\n          }\n        }\n      }))\n    } else {\n      this.setState(prevState => ({\n        userInput: {\n          ...prevState.userInput,\n          meetingFound: false,\n          noMeetingsMsg: \"No meetings found during work hours\"\n        }\n      }))\n    }\n  }\n\n  validateTime = (timeZoneArr, startTime, duration, copyTimeZoneCheck, copyStartTime) => {\n    for (let i = 0; i < timeZoneArr.length; i++) {\n\n      // adjusting time at different timeZones to be relative to first location\n      let goodTime = true;\n      let adjustStartTime = startTime + timeZoneArr[i] - timeZoneArr[0];\n      \n      // adjust for times that are outside 0-24\n      if (adjustStartTime < 0) {\n        adjustStartTime += 24;\n        //add -1d here\n      }\n      else if (adjustStartTime > 24) {\n        adjustStartTime -= 24;\n        // add +1d here\n      } \n\n      let adjustEndTime = adjustStartTime + duration;\n      // if meeting start time OR meeting end time is outside of working hours, set false\n      if ((adjustStartTime < 8 || adjustStartTime > 19)\n        || (adjustEndTime < 8 || adjustEndTime > 19)) goodTime = false;\n      copyTimeZoneCheck[i] = goodTime;\n\n      const keyName = \"location\" + (i + 1);\n      copyStartTime[keyName] = adjustStartTime;\n    }\n    return copyTimeZoneCheck;\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <header>\n            <h1>What time is it?</h1>\n          </header>\n          <div className=\"flex\">\n            <div>\n              <UserInput\n                etcList={this.state.etcList}\n                getUserInput={this.getUserInput}\n                meetingFound={this.state.userInput.meetingFound}\n                meetingMsg={this.state.userInput.noMeetingsMsg}\n              />\n            </div>\n            <MeetingTime displayResults={this.state.userInput} />\n          </div>\n        </div>\n        <footer>\n          <p>\n            &copy; Created at{\" \"}\n            <a\n              href=\"https://junocollege.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Juno College\n            </a>\n          </p>\n        </footer>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}